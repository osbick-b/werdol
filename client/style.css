/* CSS HEX
--granite-gray: #666666ff;
--titanium-yellow: #f7e733ff;
--cultured: #f7f7f9ff;
--raisin-black: #272932ff;
--keppel: #44bba4ff; */

/* =============================================================================
| CSS VARIABLES
============================================================================= */

:root {
    /* CSS HSL palette */
    --opacity: 1;

    --dark-gray: hsla(229, 12%, 17%, var(--opacity));
    --medium-gray: hsla(0, 0%, 32%, var(--opacity));
    --light-gray: #807e7e;
    /* --light-gray: hsla(0, 0%, 56%, var(--opacity)); */
    --the-yellow: hsla(55, 92%, 58%, var(--opacity));
    --the-white: hsla(240, 14%, 97%, var(--opacity));
    --the-turquoise: hsla(168, 47%, 50%, var(--opacity));

    /* MAIN VARS */
    --font-main: "Manjari", sans-serif;
    --font-fancy: "Bree Serif", serif;
    --border-thin: 1px solid var(--medium-gray);
    --c-bg-main: var(--dark-gray);
    --c-bg-negative: var(--the-white);
    --c-text-main: var(--the-white);
    --c-text-negative: var(--dark-gray);
    --c-text-title: var(--light-gray);
    --width-content-main: 70vw;
    /* TODO: dark mode and */

    --padding-main: 16px;
    --gap-main: 1vh;

    /* *TESTING VARS */
    --testing-border: 2px solid hotpink;

    /* HEADER */
    --nav-header-width: 15vw;
    --nav-header-gap: var(--gap-main);

    /* SQUARE */
    --c-correct: var(--the-turquoise);
    --c-present: var(--the-yellow);
    --c-absent: var(--medium-gray);
    --c-typed: var(--light-gray);

    --sq-side: 50px; /*TODO -- set dynamically*/
    --sq-border: 2px solid var(--medium-gray);
    --sq-font-size: calc(var(--sq-side) * 0.7);

    /* KEYBOARD */
    --c-keyboard-absent: var(--dark-gray);
    --keyboard-gap: calc(var(--key-width) * 0.2);
    --keyboard-height: 23vh;
    --c-keyboard: var(--light-gray);

    /* --keyboard-width: 70vw; */
    --key-height: calc(var(--keyboard-height) * 0.3);
    --key-width: calc(var(--key-height) * 0.75);
    --key-sp-w: calc(
        var(--key-width) * 1.6
    ); /* key-wid*1.5 + keyboard-gap*0.5 (=key-wid*0.1)*/
}

/* =============================================================================
| COLOR MODES
============================================================================= */
/* darkmode and lightmode are applied to main#app-main */
.darkmode {
    /* SEE ORIGINAL WORDLE FOR REFERENCE */
    /* TODO: colors are darkened a bit */
    --c-bg-main: var(--dark-gray);
    --c-text-main: var(--the-white);
    --c-key-bg: var(--light-gray);
    --c-square-bg: var(--dark-gray);

    /* TODO -- edit to darken in dark mode*/
    /* --c-keyboard: var(--light-gray);
    --c-correct: var(--the-turquoise);
    --c-present: var(--the-yellow);
    --c-absent: var(--light-gray); */
}

.lightmode {
    /* SEE ORIGINAL WORDLE FOR REFERENCE */
    --c-bg-main: var(--the-white);
    --c-text-main: var(--dark-gray);
    --c-key-bg: var(--light-gray);

    /* --c-keyboard: var(--light-gray);
    --c-correct: var(--the-turquoise);
    --c-present: var(--the-yellow);
    --c-absent: var(--light-gray); */
}

/* =============================================================================
| THE VERY BASICS
============================================================================= */

* {
    box-sizing: border-box;
    margin: 0;
}

body {
    /* body here is main#app-main */
}

main#app-main {
    /*  to which where dark and light modes are applied */
    background-color: var(--c-bg-main);
    font-family: var(--font-main);
    color: var(--c-text-main);
    /* --- Regular styles --- */
    /* border: var(--testing-border); */
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: var(--gap-main);
}

a,
button {
    text-decoration: none;
    cursor: pointer;
    border: none;
    font-family: var(--font-main);
    padding: 0;
}

button:not(.keyb) {
    margin: 0 6px;
    padding: 0.1rem 0.4rem;
}

label {
    color: var(--c-text-main);
}

h1:not(.logo) {
    font-family: var(--font-fancy);
    margin-bottom: var(--padding-main);
    color: var(--c-text-title);
}

h2,
h3 {
    font-family: var(--font-main);
    font-weight: 400;
    color: var(--c-text-title);
}

input:invalid {
    border: 2px solid crimson;
}


/* =============================================================================
| GENERAL SPACING
============================================================================= */
header.main,
.game-board,
.keyboard,
.modal-box {
    padding: var(--padding-main);
}

/* =============================================================================
| OUTER STRUCTURE
============================================================================= */
/* The one in index.html: */
main#main {
    width: 100%;
}

/* =============================================================================
| BY INNER COMPONENT/THING
============================================================================= */

/* ====== HEADER ====================================================*/
header.main {
    width: 100%;
    border-bottom: var(--border-thin);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
}

.nav-header {
    width: var(--nav-header-width);
    display: flex;
    gap: var(--nav-header-gap);
}
.nav-header.left {
    justify-content: flex-start;
}
.nav-header.right {
    justify-content: flex-end;
}

.nav-btn {
}
.icon {
}

.logo {
    font-family: var(--font-fancy);
    letter-spacing: 0.8px;
}

/* ====== MODAL ====================================================*/
.modal-bg {
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    width: 100vw;
    background-color: var(--c-bg-main);
    z-index: 800;
}

.modal-box {
    width: var(--width-content-main);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: var(--gap-main);
    position: relative;
    background-color: var(--c-bg-main);
    /* border: var(--testing-border); */
    z-index: 810;
}
.btn-x {
    position: absolute;
    top: var(--padding-main);
    right: var(--padding-main);
}

/* =============================================================================
| GAME
============================================================================= */
.game-board {
    /* display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center; */
    display: grid;
    gap: calc(var(--sq-side) * 0.1);
    position: relative;
}

.game-row {
    display: flex;
    flex-direction: row;
    gap: calc(var(--sq-side) * 0.1);
}

.game-square {
    padding: 0;
    line-height: var(--sq-font-size);
    text-transform: uppercase;
    border: var(--sq-border);
    height: var(--sq-side);
    width: var(--sq-side);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    font-size: var(--sq-font-size);
}

.board-msg {
    position: absolute;
    top: 50%;
    right: 50%;
    transform: translate(50%, -50%);
    margin: 0 auto;
    background-color: var(--c-bg-negative);
    color: var(--c-text-negative);
    padding: 2% 5% 0;
    font-size: 2rem;
}

/* =============================================================================
| KEYBOARD
============================================================================= */

.keyboard {
    /* height: has a fixed height -- its words that resize */
    /* width: also fixed -- based on mobile - its blank area that grows */
    /* border: var(--testing-border); */
    /* min-width: 60vw; */
    height: 30vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    gap: var(--keyboard-gap);
}

.keyboard-row {
    /* border: var(--testing-border); */
    display: flex;
    justify-content: space-around;
    gap: var(--keyboard-gap);
}

.keyb {
    text-transform: uppercase;
    align-items: center;
    color: var(--c-text-main);
    font-weight: bold;
    padding-top: 3px;
    width: var(--key-width);
    height: var(--key-height);
    border-radius: calc(var(--key-width) * 0.2);
    background-color: var(--c-keyboard);
    /* flex-grow: 1; */
}

.keyb.sp {
    width: var(--key-sp-w);
    /* flex-grow: 2; */
}

/* =============================================================================
| LETTER EVAL
============================================================================= */
.correct, .keyb.correct {
    background-color: var(--c-correct);
    border-color: var(--c-correct);
    color: var(--c-text-negative);
}

.present, .keyb.present {
    background-color: var(--c-present);
    border-color: var(--c-present);
    color: var(--c-text-negative);

}

.absent, .keyb.absent {
    /* border: var(--c-absent); */
    border-color: var(--c-absent);
    background-color: var(--c-absent);
    color: var(--c-text-negative); /*! -- see what works for keyboard or not */

}

.typed {
background-color: var(--c-typed);
border-color: var(--c-typed);
}

/* =============================================================================
| SET WORD
============================================================================= */
input#secret-word:valid {
    /* content: "OK"; */
    /* border: 3px solid greenyellow; */
}

input#secret-word:invalid {
    border: 3px solid red;
    /* content: "NOPE"; */
}

input#secret-word::before {
    content: "âœ…";
}
span[data-descr] {
    position: relative;
    border: 1px solid --the-white;
    padding: 2px;
    border-radius: 50%;
}
span[data-descr]:hover::after, 
span[data-descr]:focus::after {
    content: attr(data-descr);
    position: absolute;
    left: 0;
    top: 24px;
    background-color: var(--light-gray);
    min-width: 150px;
    border-radius: 20px;
    padding: 5px 8px;
    text-align: center;
}